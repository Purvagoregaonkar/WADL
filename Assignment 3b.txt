Assignment 3B  
Index: server.js  
const express =  
require("express");  
const bodyParser = require("body parser");  
const app = express();  
app.use(bodyParser.urlencoded({ e xtended: true }));  
app.use(bodyParser.json());  const UserRoute =  
require("./routes/User");  app.use("/user", UserRoute);  
const dbConfig =  
require("./config/database.config .js");  
const mongoose =  
require("mongoose");  
mongoose.Promise =  
global.Promise;  
mongoose  
 .connect(dbConfig.url, {   useNewUrlParser: true,   })  
 .then(() => {  
 console.log("Databse  
Connected Successfully!!");   })  
 .catch((err) => {  
 console.log("Could not  connect to the database", err);   process.exit();  
 });  
app.get("/", (req, res) => {   res.json({ message: "Hello Crud  Node Express" });  
});  
app.listen(3000, () => {  
 console.log("Server is  
listening on port 3000");  });  
 
Routes: User.js  
const express =  
require("express");  
const UserController =  
require("../controllers/User");  const router = express.Router();  
router.get("/",  
UserController.findAll);  router.get("/:id",  
UserController.findOne);  router.post("/",  
UserController.create);  
router.patch("/:id",  
UserController.update);  
router.delete("/:id",  
UserController.destroy);  module.exports = router;  
Model: User.js  
var mongoose =  
require("mongoose");  
var schema = new  
mongoose.Schema({  
 email: { type: String,  required: true, unique: true },   firstName: { type: String,  default: "" },  
 lastName: { type: String,  default: "" },  
 phone: String,  
});  
var user = new  
mongoose.model("User", schema);  module.exports = user;  
Output: 
Create User: 
Display Single User:


Update User: 


Delete User: